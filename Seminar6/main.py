# Задача №39. Решение в группах
# Даны два массива чисел. Требуется вывести те элементы первого массива (в том порядке, в каком они идут в первом
# массиве), которых нет во втором массиве. Пользователь вводит число N - количество элементов в первом массиве, затем N
# чисел - элементы массива. Затем число M - количество элементов во втором массиве. Затем элементы второго массива
# import random
# def FillArray(array, n):
#     for i in range(n):
#         array.append(random.randint(1,9)) 
# def print_dif(a, b):
#     for i in a:
#         count = 0
#         for j in b:
#             if i == j:
#                 count += 1
#         if count == 0:
#             print(i, end = " ")
# a = []
# b = []
# n = int(input("Введите количество элементов первого массива: "))
# FillArray(a, n)
# n = int(input("Введите количество элементов второго массива: "))
# FillArray(b, n)
# print(a)
# print(b)
# print_dif(a, b)
# ---------------------------------------------------------------------------------------------------------
# Задача №41.
# Дан массив, состоящий из целых чисел. Напишите программу, которая в данном массиве определит
# количество элементов, у которых два соседних и, при этом, оба соседних элемента меньше данного. Сначала
# вводится число N — количество элементов в массиве Далее записаны N чисел — элементы массива. Массив состоит из целых чисел.
# import random
# def FillArray(array, n):
#     for i in range(n):
#         array.append(random.randint(1,9)) 
# def proc(a):
#     count = 0
#     for i in range(1, len(a) -1):
#         if (a[i] > a[i-1]) and (a[i] > a[i+1]):
#             count += 1
#     return count
# a = []
# n = int(input("Введите количество элементов массива: "))
# FillArray(a, n)
# print(a)
# print(proc(a))
# ---------------------------------------------------------------------------------------------------------
# Задача №43.
# Дан список чисел. Посчитайте, сколько в нем пар элементов, равных друг другу. Считается, 
# что любые два элемента, равные друг другу образуют одну пару, которую необходимо посчитать. 
# Вводится список чисел. Все числа списка находятся на разных строках.

# ---------------------------------------------------------------------------------------------------------
# Задача №45.
# Два различных натуральных числа n и m называются дружественными, если сумма делителей числа n (включая 1, но исключая само n) 
# равна числу m и наоборот. Например, 220 и 284 – дружественные числа. По данному числу k выведите все пары дружественных чисел, 
# каждое из которых не превосходит k. Программа получает на вход одно натуральное число k, не превосходящее 105. Программа должна 
# вывести все пары дружественных чисел, каждое из которых не превосходит k. Пары необходимо выводить по одной в строке, разделяя 
# пробелами. Каждая пара должна бытьвыведена только один раз (перестановка чисел новую пару не дает).










